syntax = "proto3";

package squad.auction.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "google/protobuf/timestamp.proto";
import "squad/auction/v1beta1/params.proto";
import "squad/auction/v1beta1/auction.proto";

option go_package = "github.com/cosmosquad-labs/squad/x/auction/types";

// Query defines the gRPC querier service.
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/squad/auction/v1beta1/params";
  }

  rpc Auctions(QueryAuctionsRequest) returns (QueryAuctionsResponse) {
    option (google.api.http).get = "/squad/auction/v1beta1/auctions";
  }
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryAuctionsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAuctionsResponse {
  repeated Auction auctions = 1 [ (gogoproto.nullable) = false ];

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}