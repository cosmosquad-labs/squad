syntax = "proto3";

package squad.marketmaker.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/cosmosquad-labs/squad/x/marketmaker/types";

// Params defines the set of params for the marketmaker module.
message Params {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  string incentive_budget_address = 1 [(gogoproto.moretags) = "yaml:\"incentive_budget_address\""];

  repeated cosmos.base.v1beta1.Coin deposit_amount = 2 [
    (gogoproto.moretags)     = "yaml:\"deposit_amount\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false
  ];

  repeated IncentivePair incentive_pairs = 3
      [(gogoproto.moretags) = "yaml:\"incentive_pairs\"", (gogoproto.nullable) = false];
  ;
}

message IncentivePair {
  option (gogoproto.goproto_getters)    = false;
  string                    pair_name   = 1;
  uint64                    pair_id     = 2 [(gogoproto.moretags) = "yaml:\"pair_id\""];
  google.protobuf.Timestamp update_time = 3
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"update_time\""];

  string min_depth = 4 [
    (gogoproto.moretags)   = "yaml:\"min_depth\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];

  string max_spread = 5 [
    (gogoproto.moretags)   = "yaml:\"max_spread\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string min_width = 6 [
    (gogoproto.moretags)   = "yaml:\"min_width\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string remnant_threshold = 7 [
    (gogoproto.moretags)   = "yaml:\"remnant_threshold\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string daily_uptime = 8 [
    (gogoproto.moretags)   = "yaml:\"daily_uptime\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string monthly_uptime = 9 [
    (gogoproto.moretags)   = "yaml:\"monthly_uptime\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string incentive_weight = 10 [
    (gogoproto.moretags)   = "yaml:\"incentive_weight\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
}

message Incentive {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  repeated cosmos.base.v1beta1.Coin claimable = 2 [
    (gogoproto.moretags)     = "yaml:\"claimable\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false
  ];
}

message MarketMaker {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  uint64 pair_id = 2 [(gogoproto.moretags) = "yaml:\"pair_id\""];

  bool eligible = 3 [(gogoproto.moretags) = "yaml:\"eligible\""];
}

message Deposit {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  repeated cosmos.base.v1beta1.Coin amount = 1 [
    (gogoproto.moretags)     = "yaml:\"amount\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false
  ];
}

message DepositRecord {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  uint64 pair_id = 2 [(gogoproto.moretags) = "yaml:\"pair_id\""];

  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.moretags)     = "yaml:\"amount\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false
  ];
}
