syntax = "proto3";

package squad.marketmaker.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "squad/marketmaker/v1beta1/marketmaker.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/cosmosquad-labs/squad/x/marketmaker/types";

message MarketMakerProposal {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  // title specifies the title of the plan
  string title = 1;

  // description specifies the description of the plan
  string description = 2;

  repeated MarketMakerHandle inclusions = 3
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"inclusions\""];

  repeated MarketMakerHandle exclusions = 4
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"exclusions\""];

  repeated MarketMakerHandle rejections = 5
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"rejections\""];

  repeated IncentiveDistribution distributions = 6
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"distributions\""];
}

message MarketMakerHandle {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  uint64 pair_id = 2 [(gogoproto.moretags) = "yaml:\"pair_id\""];
}

message IncentiveDistribution {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  uint64 pair_id = 2 [(gogoproto.moretags) = "yaml:\"pair_id\""];

  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.moretags)     = "yaml:\"amount\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false
  ];
}
