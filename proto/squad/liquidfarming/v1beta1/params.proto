syntax = "proto3";
package squad.liquidfarming.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package                      = "github.com/cosmosquad-labs/squad/x/liquidfarming/types";

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_getters)  = false;

  repeated cosmos.base.v1beta1.Coin liquid_farm_creation_fee = 1
    [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];

  // delayed_farm_gas_fee is used to impose gas fee for the farm request
  uint64 delayed_farm_gas_fee = 2 [
    (gogoproto.moretags)   = "yaml:\"delayed_farm_gas_fee\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas",
    (gogoproto.nullable)   = false
  ];

  repeated LiquidFarm liquid_farms = 3 [(gogoproto.nullable) = false];
}

// LiquidFarm defines ...
message LiquidFarm {
 option (gogoproto.goproto_getters)  = false;
 option (gogoproto.goproto_stringer) = false;

  uint64 pool_id = 1;

  string minimum_deposit_amount = 2
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];

  string minimum_bid_amount = 3
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}
