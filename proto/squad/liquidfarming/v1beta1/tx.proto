syntax = "proto3";
package squad.liquidfarming.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/cosmosquad-labs/squad/x/liquidfarming/types";

// Msg defines the Msg service.
service Msg {
  // Farm defines a method for farming pool coin for a liquid farm
  rpc Farm(MsgFarm) returns (MsgFarmResponse);

  // CancelQueuedFarming defines a method for canceling the queueud farming
  rpc CancelQueuedFarming(MsgCancelQueuedFarming) returns (MsgCancelQueuedFarmingResponse);
  
  // Unfarm defines a method for unfarming amount of LFCoin
  rpc Unfarm(MsgUnfarm) returns (MsgUnfarmResponse);

  // PlaceBid defines a method for placing a bid for a rewards auction
  rpc PlaceBid(MsgPlaceBid) returns (MsgPlaceBidResponse);

  // RefundBid defines a method for refunding the bid that is not winning for the auction
  rpc RefundBid(MsgRefundBid) returns (MsgRefundBidResponse);
}

// MsgFarm defines a SDK message for farming pool coin for a liquid farm.
message MsgFarm {
  option (gogoproto.goproto_getters) = false;

  uint64 pool_id = 1;

  string farmer = 2;

  cosmos.base.v1beta1.Coin farming_coin = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

// MsgFarmResponse defines the MsgFarmResponse response type.
message MsgFarmResponse {}

// MsgCancelQueuedFarming defines a SDK message for canceling the queued farming.
message MsgCancelQueuedFarming {
  option (gogoproto.goproto_getters) = false;

  uint64 pool_id = 1;

  string farmer = 2;

  cosmos.base.v1beta1.Coin unfarming_coin = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

// MsgCancelQueuedFarmingResponse defines the MsgCancelQueuedFarmingResponse response type.
message MsgCancelQueuedFarmingResponse {}

// MsgUnfarm defines a SDK message for unfarming LFCoin.
message MsgUnfarm {
  option (gogoproto.goproto_getters) = false;

  uint64 pool_id = 1;

  string farmer = 2;

  cosmos.base.v1beta1.Coin lf_coin = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.customname) = "LFCoin"
  ];
}

// MsgUnfarmResponse defines the MsgUnfarmResponse response type.
message MsgUnfarmResponse {}

// MsgPlaceBid defines a SDK message for placing a bid for a rewards auction.
message MsgPlaceBid {
  option (gogoproto.goproto_getters) = false;

  uint64 pool_id = 1;

  string bidder = 2;

  cosmos.base.v1beta1.Coin bidding_coin = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

// MsgPlaceBidResponse defines the MsgPlaceBidResponse response type.
message MsgPlaceBidResponse {}

// MsgRefundBid defines a SDK message for refunding the bid that is not winning for the auction.
message MsgRefundBid {
  option (gogoproto.goproto_getters) = false;

  uint64 auction_id = 1;

  uint64 bid_id = 2;

  string bidder = 3;
}

// MsgRefundBidResponse defines the MsgRefundBidResponse response type.
message MsgRefundBidResponse {}
