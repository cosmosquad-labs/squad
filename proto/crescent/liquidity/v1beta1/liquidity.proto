syntax = "proto3";
package crescent.liquidity.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package                      = "github.com/crescent-network/crescent/x/liquidity/types";
option (gogoproto.goproto_getters_all) = false;

// Params defines the parameters for the liquidity module.
message Params {
  string initial_pool_coin_supply = 1
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];

  uint32 batch_size = 2;

  uint32 tick_precision = 3;

  string min_initial_deposit_amount = 4
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];

  repeated cosmos.base.v1beta1.Coin pool_creation_fee = 5
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];

  string fee_collector_address = 6;

  string max_price_limit_ratio = 7
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];

  string swap_fee_rate = 8
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

// Pool defines a basic liquidity pool with no min-price and max-price.
message Pool {
  uint64 id = 1;

  uint64 pair_id = 2;

  string x_coin_denom = 3;

  string y_coin_denom = 4;

  string reserve_address = 5;

  string pool_coin_denom = 6;

  uint64 last_deposit_request_id = 7;

  uint64 last_withdraw_request_id = 8;
}

// Pair defines a coin pair.
message Pair {
  uint64 id = 1;

  string x_coin_denom = 2;

  string y_coin_denom = 3;

  string escrow_address = 4;

  uint64 last_swap_request_id = 5;

  uint64 last_cancel_swap_request_id = 6;

  string last_price = 7 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];

  uint64 current_batch_id = 8;
}

// DepositRequest defines a deposit request.
message DepositRequest {
  // id specifies the id for the request
  uint64 id = 1;

  // pool_id specifies the pool id
  uint64 pool_id = 2;

  // msg_height specifies the block height when the request is stored for the batch execution
  int64 msg_height = 3;

  // depositor specifies the bech32-encoded address that makes a deposit to the pool
  string depositor = 4;

  // x_coin specifies the deposit coin x
  cosmos.base.v1beta1.Coin x_coin = 5 [(gogoproto.nullable) = false];

  // y_coin specifies the deposit coin y
  cosmos.base.v1beta1.Coin y_coin = 6 [(gogoproto.nullable) = false];
}

// WithdrawRequest defines a withdraw request.
message WithdrawRequest {
  // id specifies the id for the request
  uint64 id = 1;

  // pool_id specifies the pool id
  uint64 pool_id = 2;

  // msg_height specifies the block height when the request is stored for the batch execution
  int64 msg_height = 3;

  // withdrawer specifies the bech32-encoded address that withdraws pool coin from the pool
  string withdrawer = 4;

  // pool_coin specifies the pool coin that is a proof of liquidity provider for the pool
  cosmos.base.v1beta1.Coin pool_coin = 5
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

// SwapRequest defines a swap request.
message SwapRequest {
  // id specifies the id for the request
  uint64 id = 1;

  // pool_id specifies the pool id
  uint64 pair_id = 2;

  // msg_height specifies the block height when the request is stored for the batch execution
  int64 msg_height = 3;

  // orderer specifies the bech32-encoded address that makes an order to swap from the pool
  string orderer = 4;

  // direction specifies the swap direction; either buy or sell
  SwapDirection direction = 5;

  // price specifies the price that an orderer is willing to swap
  string price = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];

  // remaining_amount specifies the remaining amount after the swap
  string remaining_amount = 7
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];

  // received_amount specifies the received amount after the swap
  string received_amount = 8
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];

  // batch_id specifies the pair's batch id when the request is stored
  uint64 batch_id = 9;
}

// CancelSwapRequest defines a request to cancel a swap request.
message CancelSwapRequest {
  uint64 id = 1;

  uint64 pair_id = 2;

  int64 msg_height = 3;

  string orderer = 4;

  uint64 swap_request_id = 5;

  uint64 batch_id = 6;
}

// SwapDirection enumerates swap directions.
enum SwapDirection {
  option (gogoproto.goproto_enum_prefix) = false;

  // SWAP_DIRECTION_UNSPECIFIED specifies unknown swap direction
  SWAP_DIRECTION_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "SwapDirectionUnspecified"];

  // SWAP_DIRECTION_BUY specifies buy(swap x to y) swap direction
  SWAP_DIRECTION_BUY = 1 [(gogoproto.enumvalue_customname) = "SwapDirectionBuy"];

  // SWAP_DIRECTION_SELL specifies sell(swap y to x) swap direction
  SWAP_DIRECTION_SELL = 2 [(gogoproto.enumvalue_customname) = "SwapDirectionSell"];
}
